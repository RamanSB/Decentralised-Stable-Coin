{
    "contractName": "SafeTest",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "log",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "log_address",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "val",
                    "type": "uint256[]"
                }
            ],
            "name": "log_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "int256[]",
                    "name": "val",
                    "type": "int256[]"
                }
            ],
            "name": "log_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "val",
                    "type": "address[]"
                }
            ],
            "name": "log_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "log_bytes",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "name": "log_bytes32",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "",
                    "type": "int256"
                }
            ],
            "name": "log_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "val",
                    "type": "address"
                }
            ],
            "name": "log_named_address",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "val",
                    "type": "uint256[]"
                }
            ],
            "name": "log_named_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "int256[]",
                    "name": "val",
                    "type": "int256[]"
                }
            ],
            "name": "log_named_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "val",
                    "type": "address[]"
                }
            ],
            "name": "log_named_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "val",
                    "type": "bytes"
                }
            ],
            "name": "log_named_bytes",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "val",
                    "type": "bytes32"
                }
            ],
            "name": "log_named_bytes32",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "val",
                    "type": "int256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                }
            ],
            "name": "log_named_decimal_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "val",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                }
            ],
            "name": "log_named_decimal_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "val",
                    "type": "int256"
                }
            ],
            "name": "log_named_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "val",
                    "type": "string"
                }
            ],
            "name": "log_named_string",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "val",
                    "type": "uint256"
                }
            ],
            "name": "log_named_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "log_string",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "log_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "logs",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "IS_TEST",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeArtifacts",
            "outputs": [
                {
                    "internalType": "string[]",
                    "name": "excludedArtifacts_",
                    "type": "string[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeContracts",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "excludedContracts_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeSelectors",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes4[]",
                            "name": "selectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "name": "excludedSelectors_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeSenders",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "excludedSenders_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "failed",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "setUp",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetArtifactSelectors",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "string",
                            "name": "artifact",
                            "type": "string"
                        },
                        {
                            "internalType": "bytes4[]",
                            "name": "selectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetArtifacts",
            "outputs": [
                {
                    "internalType": "string[]",
                    "name": "targetedArtifacts_",
                    "type": "string[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetContracts",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "targetedContracts_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetInterfaces",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        },
                        {
                            "internalType": "string[]",
                            "name": "artifacts",
                            "type": "string[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "name": "targetedInterfaces_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetSelectors",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes4[]",
                            "name": "selectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "name": "targetedSelectors_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetSenders",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "targetedSenders_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "test_Withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/test/unit/SafeTest.t.sol\":\"SafeTest\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/console.sol\":{\"keccak256\":\"0x0b7475858d62180b6ccbea2181cf9fa0ed6773fdb8b0f5cbd946d13c5660579f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ba7fa71d8d3ace512ee0a3d9d4d5923a6eb01fcbd93219726e40eeb50a8e52f\",\"dweb:/ipfs/QmScHyHRhrWp21Gazmzq1HR1YDjkbpya6SPTHEs5wzjhwg\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/test/unit/SafeTest.t.sol\":{\"keccak256\":\"0xe9bff31932cfc2ce604bc6f0388fbbfb77f09097493116bc30f809a806e9e8aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f911b567fa59ad62a594bca293a41e1f1f5847a8646f9d27425569b7146f1369\",\"dweb:/ipfs/QmdoUhtno8BwEqxxd71upQ4Z275N82vS9XCo8VNkV6Ryho\"]}},\"version\":1}",
    "bytecode": "6080604052600c8054600160ff199182168117909255601f80549091169091179055348015602b575f80fd5b50611028806100395f395ff3fe6080604052600436106100dc575f3560e01c806385226c811161007c578063b5508aa911610057578063b5508aa9146101fb578063ba414fa61461020f578063e20c9f7114610233578063fa7626d414610247575f80fd5b806385226c81146101a5578063916a17c6146101c6578063b0464fdc146101e7575f80fd5b806331871ff0116100b757806331871ff0146101485780633e5e3c231461015c5780633f7286f41461017057806366d9a9a014610184575f80fd5b80630a9254e4146100e75780631ed7831c146100fd5780632ade388014610127575f80fd5b366100e357005b5f80fd5b3480156100f2575f80fd5b506100fb610260565b005b348015610108575f80fd5b506101116102ae565b60405161011e9190610bf6565b60405180910390f35b348015610132575f80fd5b5061013b61030e565b60405161011e9190610c6f565b348015610153575f80fd5b506100fb61044a565b348015610167575f80fd5b5061011161050a565b34801561017b575f80fd5b50610111610568565b34801561018f575f80fd5b506101986105c6565b60405161011e9190610d7c565b3480156101b0575f80fd5b506101b961072a565b60405161011e9190610dfa565b3480156101d1575f80fd5b506101da6107f5565b60405161011e9190610e51565b3480156101f2575f80fd5b506101da6108d6565b348015610206575f80fd5b506101b96109b7565b34801561021a575f80fd5b50610223610a82565b604051901515815260200161011e565b34801561023e575f80fd5b50610111610b22565b348015610252575f80fd5b50601f546102239060ff1681565b60405161026c90610bea565b604051809103905ff080158015610285573d5f803e3d5ffd5b50601f60016101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b6060601680548060200260200160405190810160405280929190818152602001828054801561030457602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116102e6575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020015f905b82821015610441575f84815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101561042a578382905f5260205f2001805461039f90610ec8565b80601f01602080910402602001604051908101604052809291908181526020018280546103cb90610ec8565b80156104165780601f106103ed57610100808354040283529160200191610416565b820191905f5260205f20905b8154815290600101906020018083116103f957829003601f168201915b505050505081526020019060010190610382565b505050508152505081526020019060010190610331565b50505050905090565b601f546040516101009091046001600160a01b0316905f90670de0b6b3a76400009082818181858883f19350505050158015610488573d5f803e3d5ffd5b50601f5460408051633ccfd60b60e01b81529051479261010090046001600160a01b031691633ccfd60b916004808301925f92919082900301818387803b1580156104d1575f80fd5b505af11580156104e3573d5f803e3d5ffd5b504792506105069150610500905083670de0b6b3a7640000610f00565b82610b80565b5050565b6060601880548060200260200160405190810160405280929190818152602001828054801561030457602002820191905f5260205f209081546001600160a01b031681526001909101906020018083116102e6575050505050905090565b6060601780548060200260200160405190810160405280929190818152602001828054801561030457602002820191905f5260205f209081546001600160a01b031681526001909101906020018083116102e6575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020015f905b82821015610441578382905f5260205f2090600202016040518060400160405290815f8201805461061990610ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461064590610ec8565b80156106905780601f1061066757610100808354040283529160200191610690565b820191905f5260205f20905b81548152906001019060200180831161067357829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561071257602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106d45790505b505050505081525050815260200190600101906105e9565b6060601a805480602002602001604051908101604052809291908181526020015f905b82821015610441578382905f5260205f2001805461076a90610ec8565b80601f016020809104026020016040519081016040528092919081815260200182805461079690610ec8565b80156107e15780601f106107b8576101008083540402835291602001916107e1565b820191905f5260205f20905b8154815290600101906020018083116107c457829003601f168201915b50505050508152602001906001019061074d565b6060601d805480602002602001604051908101604052809291908181526020015f905b82821015610441575f8481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156108be57602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108805790505b50505050508152505081526020019060010190610818565b6060601c805480602002602001604051908101604052809291908181526020015f905b82821015610441575f8481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561099f57602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116109615790505b505050505081525050815260200190600101906108f9565b60606019805480602002602001604051908101604052809291908181526020015f905b82821015610441578382905f5260205f200180546109f790610ec8565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2390610ec8565b8015610a6e5780601f10610a4557610100808354040283529160200191610a6e565b820191905f5260205f20905b815481529060010190602001808311610a5157829003601f168201915b5050505050815260200190600101906109da565b6008545f9060ff1615610a99575060085460ff1690565b604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190526519985a5b195960d21b60248301525f9163667f9d7090604401602060405180830381865afa158015610af7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b1b9190610f25565b1415905090565b6060601580548060200260200160405190810160405280929190818152602001828054801561030457602002820191905f5260205f209081546001600160a01b031681526001909101906020018083116102e6575050505050905090565b60405163260a5b1560e21b81526004810183905260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d906398296c54906044015f6040518083038186803b158015610bd0575f80fd5b505afa158015610be2573d5f803e3d5ffd5b505050505050565b60b680610f3d83390190565b602080825282518282018190525f918401906040840190835b81811015610c365783516001600160a01b0316835260209384019390920191600101610c0f565b509095945050505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015610d2c57603f19878603018452815180516001600160a01b03168652602090810151604082880181905281519088018190529101906060600582901b8801810191908801905f5b81811015610d1257605f198a8503018352610cfc848651610c41565b6020958601959094509290920191600101610ce0565b509197505050602094850194929092019150600101610c95565b50929695505050505050565b5f8151808452602084019350602083015f5b82811015610d725781516001600160e01b031916865260209586019590910190600101610d4a565b5093949350505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015610d2c57603f198786030184528151805160408752610dc86040880182610c41565b9050602082015191508681036020880152610de38183610d38565b965050506020938401939190910190600101610da2565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015610d2c57603f19878603018452610e3c858351610c41565b94506020938401939190910190600101610e20565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015610d2c57868503603f19018452815180516001600160a01b03168652602090810151604091870182905290610eb290870182610d38565b9550506020938401939190910190600101610e77565b600181811c90821680610edc57607f821691505b602082108103610efa57634e487b7160e01b5f52602260045260245ffd5b50919050565b80820180821115610f1f57634e487b7160e01b5f52601160045260245ffd5b92915050565b5f60208284031215610f35575f80fd5b505191905056fe6080604052348015600e575f80fd5b50609c80601a5f395ff3fe608060405260043610601e575f3560e01c80633ccfd60b146028575f80fd5b36602457005b5f80fd5b3480156032575f80fd5b506039603b565b005b60405133904780156108fc02915f818181858888f193505050501580156063573d5f803e3d5ffd5b5056fea264697066735822122037af31ecc24210f2cb982ef4a46bf33a76707982fab03e8a10395b56dec530c564736f6c634300081a0033a26469706673582212201051d5a9d7dcf1fb1b2cfe48f6d423e2d4ef04d0f4bebb3eb5fb60d4a9b4e7f764736f6c634300081a0033",
    "deployedBytecode": "",
    "sourceMap": "342:505:23:-:0;;;3126:44:2;;;3166:4;-1:-1:-1;;3126:44:2;;;;;;;;1016:26:12;;;;;;;;;;;342:505:23;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "342:505:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;509:58;;;;;;;;;;;;;:::i;:::-;;2907:134:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3823:151;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;573:272:23:-;;;;;;;;;;;;;:::i;3684:133:5:-;;;;;;;;;;;;;:::i;3385:141::-;;;;;;;;;;;;;:::i;3193:186::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3047:140::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3532:146::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2754:147::-;;;;;;;;;;;;;:::i;2459:141::-;;;;;;;;;;;;;:::i;1243:204:1:-;;;;;;;;;;;;;:::i;:::-;;;6168:14:24;;6161:22;6143:41;;6131:2;6116:18;1243:204:1;6003:187:24;2606:142:5;;;;;;;;;;;;;:::i;1016:26:12:-;;;;;;;;;;-1:-1:-1;1016:26:12;;;;;;;;509:58:23;550:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;543:4;;:17;;;;;-1:-1:-1;;;;;543:17:23;;;;;-1:-1:-1;;;;;543:17:23;;;;;;509:58::o;2907:134:5:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2999:35:5;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3926:41:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;573:272:23:-;631:4;;615:40;;631:4;;;;-1:-1:-1;;;;;631:4:23;;615:40;;647:7;;615:40;;;;647:7;631:4;615:40;;;;;;;;;;;;;;;;;;;;-1:-1:-1;717:4:23;;:15;;;-1:-1:-1;;;717:15:23;;;;686:21;;717:4;;;-1:-1:-1;;;;;717:4:23;;:13;;:15;;;;;665:18;;717:15;;;;;;;665:18;717:4;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:21:23;;-1:-1:-1;795:43:23;;-1:-1:-1;804:20:23;;-1:-1:-1;804:10:23;817:7;804:20;:::i;:::-;826:11;795:8;:43::i;:::-;605:240;;573:272::o;3684:133:5:-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3775:35:5;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;3385:141::-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:39:5;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;3193:186::-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3317:55:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:140;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:146;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:147;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:204:1;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:1;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:1;;:7;:39;;;6981:51:24;;;-1:-1:-1;;;7048:18:24;;;7041:34;1428:1:1;;1377:7;;6954:18:24;;1377:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2606:142:5:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2702:39:5;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;2270:110:1:-;2349:24;;-1:-1:-1;;;2349:24:1;;;;;7449:25:24;;;7490:18;;;7483:34;;;2349:11:1;;;;7422:18:24;;2349:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2270:110;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:637:24:-;204:2;216:21;;;286:13;;189:18;;;308:22;;;156:4;;387:15;;;361:2;346:18;;;156:4;430:195;444:6;441:1;438:13;430:195;;;509:13;;-1:-1:-1;;;;;505:39:24;493:52;;574:2;600:15;;;;565:12;;;;541:1;459:9;430:195;;;-1:-1:-1;642:3:24;;14:637;-1:-1:-1;;;;;14:637:24:o;656:289::-;698:3;736:5;730:12;763:6;758:3;751:19;819:6;812:4;805:5;801:16;794:4;789:3;785:14;779:47;871:1;864:4;855:6;850:3;846:16;842:27;835:38;934:4;927:2;923:7;918:2;910:6;906:15;902:29;897:3;893:39;889:50;882:57;;;656:289;;;;:::o;950:1626::-;1154:4;1202:2;1191:9;1187:18;1232:2;1221:9;1214:21;1255:6;1290;1284:13;1321:6;1313;1306:22;1359:2;1348:9;1344:18;1337:25;;1421:2;1411:6;1408:1;1404:14;1393:9;1389:30;1385:39;1371:53;;1459:2;1451:6;1447:15;1480:1;1490:1057;1504:6;1501:1;1498:13;1490:1057;;;-1:-1:-1;;1569:22:24;;;1565:36;1553:49;;1625:13;;1712:9;;-1:-1:-1;;;;;1708:35:24;1693:51;;1791:2;1783:11;;;1777:18;1677:2;1815:15;;;1808:27;;;1896:19;;1665:15;;;1928:24;;;2083:21;;;1986:2;2036:1;2032:16;;;2020:29;;2016:38;;;1974:15;;;;-1:-1:-1;2142:296:24;2158:8;2153:3;2150:17;2142:296;;;2264:2;2260:7;2251:6;2243;2239:19;2235:33;2228:5;2221:48;2296:42;2331:6;2320:8;2314:15;2296:42;:::i;:::-;2381:2;2367:17;;;;2286:52;;-1:-1:-1;2410:14:24;;;;;2186:1;2177:11;2142:296;;;-1:-1:-1;2461:6:24;;-1:-1:-1;;;2502:2:24;2525:12;;;;2490:15;;;;;-1:-1:-1;1526:1:24;1519:9;1490:1057;;;-1:-1:-1;2564:6:24;;950:1626;-1:-1:-1;;;;;;950:1626:24:o;2581:446::-;2633:3;2671:5;2665:12;2698:6;2693:3;2686:19;2730:4;2725:3;2721:14;2714:21;;2769:4;2762:5;2758:16;2792:1;2802:200;2816:6;2813:1;2810:13;2802:200;;;2881:13;;-1:-1:-1;;;;;;2877:40:24;2865:53;;2947:4;2938:14;;;;2975:17;;;;2838:1;2831:9;2802:200;;;-1:-1:-1;3018:3:24;;2581:446;-1:-1:-1;;;;2581:446:24:o;3032:1143::-;3250:4;3298:2;3287:9;3283:18;3328:2;3317:9;3310:21;3351:6;3386;3380:13;3417:6;3409;3402:22;3455:2;3444:9;3440:18;3433:25;;3517:2;3507:6;3504:1;3500:14;3489:9;3485:30;3481:39;3467:53;;3555:2;3547:6;3543:15;3576:1;3586:560;3600:6;3597:1;3594:13;3586:560;;;3693:2;3689:7;3677:9;3669:6;3665:22;3661:36;3656:3;3649:49;3727:6;3721:13;3773:2;3767:9;3804:2;3796:6;3789:18;3834:48;3878:2;3870:6;3866:15;3852:12;3834:48;:::i;:::-;3820:62;;3931:2;3927;3923:11;3917:18;3895:40;;3984:6;3976;3972:19;3967:2;3959:6;3955:15;3948:44;4015:51;4059:6;4043:14;4015:51;:::i;:::-;4005:61;-1:-1:-1;;;4101:2:24;4124:12;;;;4089:15;;;;;3622:1;3615:9;3586:560;;4180:782;4342:4;4390:2;4379:9;4375:18;4420:2;4409:9;4402:21;4443:6;4478;4472:13;4509:6;4501;4494:22;4547:2;4536:9;4532:18;4525:25;;4609:2;4599:6;4596:1;4592:14;4581:9;4577:30;4573:39;4559:53;;4647:2;4639:6;4635:15;4668:1;4678:255;4692:6;4689:1;4686:13;4678:255;;;4785:2;4781:7;4769:9;4761:6;4757:22;4753:36;4748:3;4741:49;4813:40;4846:6;4837;4831:13;4813:40;:::i;:::-;4803:50;-1:-1:-1;4888:2:24;4911:12;;;;4876:15;;;;;4714:1;4707:9;4678:255;;4967:1031;5169:4;5217:2;5206:9;5202:18;5247:2;5236:9;5229:21;5270:6;5305;5299:13;5336:6;5328;5321:22;5374:2;5363:9;5359:18;5352:25;;5436:2;5426:6;5423:1;5419:14;5408:9;5404:30;5400:39;5386:53;;5474:2;5466:6;5462:15;5495:1;5505:464;5519:6;5516:1;5513:13;5505:464;;;5584:22;;;-1:-1:-1;;5580:36:24;5568:49;;5640:13;;5685:9;;-1:-1:-1;;;;;5681:35:24;5666:51;;5764:2;5756:11;;;5750:18;5805:2;5788:15;;;5781:27;;;5750:18;5831:58;;5873:15;;5750:18;5831:58;:::i;:::-;5821:68;-1:-1:-1;;5924:2:24;5947:12;;;;5912:15;;;;;5541:1;5534:9;5505:464;;6195:380;6274:1;6270:12;;;;6317;;;6338:61;;6392:4;6384:6;6380:17;6370:27;;6338:61;6445:2;6437:6;6434:14;6414:18;6411:38;6408:161;;6491:10;6486:3;6482:20;6479:1;6472:31;6526:4;6523:1;6516:15;6554:4;6551:1;6544:15;6408:161;;6195:380;;;:::o;6580:222::-;6645:9;;;6666:10;;;6663:133;;;6718:10;6713:3;6709:20;6706:1;6699:31;6753:4;6750:1;6743:15;6781:4;6778:1;6771:15;6663:133;6580:222;;;;:::o;7086:184::-;7156:6;7209:2;7197:9;7188:7;7184:23;7180:32;7177:52;;;7225:1;7222;7215:12;7177:52;-1:-1:-1;7248:16:24;;7086:184;-1:-1:-1;7086:184:24:o",
    "sourcePath": "/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/test/unit/SafeTest.t.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.26+commit.8a97fa7a"
    },
    "ast": {
        "absolutePath": "/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/test/unit/SafeTest.t.sol",
        "exportedSymbols": {
            "Safe": [
                38785
            ],
            "SafeTest": [
                38849
            ],
            "Test": [
                12107
            ]
        },
        "id": 38850,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 38761,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".26"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:24:23"
            },
            {
                "absolutePath": "/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/Test.sol",
                "file": "/Users/raman/Documents/Crypto/Foundry/FoundryF23/foundry-defi-stablecoin-f23/lib/forge-std/src/Test.sol",
                "id": 38763,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 38850,
                "sourceUnit": 12108,
                "src": "59:125:23",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 38762,
                            "name": "Test",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12107,
                            "src": "67:4:23",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "Safe",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 38785,
                "linearizedBaseContracts": [
                    38785
                ],
                "name": "Safe",
                "nameLocation": "195:4:23",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 38766,
                            "nodeType": "Block",
                            "src": "233:2:23",
                            "statements": []
                        },
                        "id": 38767,
                        "implemented": true,
                        "kind": "receive",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 38764,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "213:2:23"
                        },
                        "returnParameters": {
                            "id": 38765,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "233:0:23"
                        },
                        "scope": 38785,
                        "src": "206:29:23",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 38783,
                            "nodeType": "Block",
                            "src": "270:68:23",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "id": 38778,
                                                            "name": "this",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967268,
                                                            "src": "317:4:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_Safe_$38785",
                                                                "typeString": "contract Safe"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_Safe_$38785",
                                                                "typeString": "contract Safe"
                                                            }
                                                        ],
                                                        "id": 38777,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "309:7:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 38776,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "309:7:23",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 38779,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "309:13:23",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "id": 38780,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "323:7:23",
                                                "memberName": "balance",
                                                "nodeType": "MemberAccess",
                                                "src": "309:21:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 38772,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "288:3:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 38773,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "292:6:23",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "288:10:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 38771,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "280:8:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 38770,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "280:8:23",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 38774,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "280:19:23",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 38775,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "300:8:23",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "280:28:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 38781,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "280:51:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 38782,
                                    "nodeType": "ExpressionStatement",
                                    "src": "280:51:23"
                                }
                            ]
                        },
                        "functionSelector": "3ccfd60b",
                        "id": 38784,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "withdraw",
                        "nameLocation": "250:8:23",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 38768,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "258:2:23"
                        },
                        "returnParameters": {
                            "id": 38769,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "270:0:23"
                        },
                        "scope": 38785,
                        "src": "241:97:23",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 38850,
                "src": "186:154:23",
                "usedErrors": [],
                "usedEvents": []
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 38786,
                            "name": "Test",
                            "nameLocations": [
                                "363:4:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 12107,
                            "src": "363:4:23"
                        },
                        "id": 38787,
                        "nodeType": "InheritanceSpecifier",
                        "src": "363:4:23"
                    }
                ],
                "canonicalName": "SafeTest",
                "contractDependencies": [
                    38785
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 38849,
                "linearizedBaseContracts": [
                    38849,
                    12107,
                    12055,
                    6735,
                    6375,
                    5582,
                    3522,
                    2695,
                    65,
                    62
                ],
                "name": "SafeTest",
                "nameLocation": "351:8:23",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 38790,
                        "mutability": "mutable",
                        "name": "safe",
                        "nameLocation": "379:4:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 38849,
                        "src": "374:9:23",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Safe_$38785",
                            "typeString": "contract Safe"
                        },
                        "typeName": {
                            "id": 38789,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 38788,
                                "name": "Safe",
                                "nameLocations": [
                                    "374:4:23"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 38785,
                                "src": "374:4:23"
                            },
                            "referencedDeclaration": 38785,
                            "src": "374:4:23",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Safe_$38785",
                                "typeString": "contract Safe"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 38793,
                            "nodeType": "Block",
                            "src": "501:2:23",
                            "statements": []
                        },
                        "id": 38794,
                        "implemented": true,
                        "kind": "receive",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 38791,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "481:2:23"
                        },
                        "returnParameters": {
                            "id": 38792,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "501:0:23"
                        },
                        "scope": 38849,
                        "src": "474:29:23",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 38804,
                            "nodeType": "Block",
                            "src": "533:34:23",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 38802,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 38797,
                                            "name": "safe",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 38790,
                                            "src": "543:4:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Safe_$38785",
                                                "typeString": "contract Safe"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 38800,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "NewExpression",
                                                "src": "550:8:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Safe_$38785_$",
                                                    "typeString": "function () returns (contract Safe)"
                                                },
                                                "typeName": {
                                                    "id": 38799,
                                                    "nodeType": "UserDefinedTypeName",
                                                    "pathNode": {
                                                        "id": 38798,
                                                        "name": "Safe",
                                                        "nameLocations": [
                                                            "554:4:23"
                                                        ],
                                                        "nodeType": "IdentifierPath",
                                                        "referencedDeclaration": 38785,
                                                        "src": "554:4:23"
                                                    },
                                                    "referencedDeclaration": 38785,
                                                    "src": "554:4:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Safe_$38785",
                                                        "typeString": "contract Safe"
                                                    }
                                                }
                                            },
                                            "id": 38801,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "550:10:23",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Safe_$38785",
                                                "typeString": "contract Safe"
                                            }
                                        },
                                        "src": "543:17:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Safe_$38785",
                                            "typeString": "contract Safe"
                                        }
                                    },
                                    "id": 38803,
                                    "nodeType": "ExpressionStatement",
                                    "src": "543:17:23"
                                }
                            ]
                        },
                        "functionSelector": "0a9254e4",
                        "id": 38805,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "setUp",
                        "nameLocation": "518:5:23",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 38795,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "523:2:23"
                        },
                        "returnParameters": {
                            "id": 38796,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "533:0:23"
                        },
                        "scope": 38849,
                        "src": "509:58:23",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 38847,
                            "nodeType": "Block",
                            "src": "605:240:23",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "31",
                                                "id": 38816,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "647:7:23",
                                                "subdenomination": "ether",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                },
                                                "value": "1"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 38812,
                                                                "name": "safe",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 38790,
                                                                "src": "631:4:23",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Safe_$38785",
                                                                    "typeString": "contract Safe"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_Safe_$38785",
                                                                    "typeString": "contract Safe"
                                                                }
                                                            ],
                                                            "id": 38811,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "623:7:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 38810,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "623:7:23",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 38813,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "623:13:23",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 38809,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "615:8:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 38808,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "615:8:23",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 38814,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "615:22:23",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 38815,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "638:8:23",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "615:31:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 38817,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "615:40:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 38818,
                                    "nodeType": "ExpressionStatement",
                                    "src": "615:40:23"
                                },
                                {
                                    "assignments": [
                                        38820
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 38820,
                                            "mutability": "mutable",
                                            "name": "preBalance",
                                            "nameLocation": "673:10:23",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 38847,
                                            "src": "665:18:23",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 38819,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "665:7:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 38826,
                                    "initialValue": {
                                        "expression": {
                                            "arguments": [
                                                {
                                                    "id": 38823,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967268,
                                                    "src": "694:4:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_SafeTest_$38849",
                                                        "typeString": "contract SafeTest"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_SafeTest_$38849",
                                                        "typeString": "contract SafeTest"
                                                    }
                                                ],
                                                "id": 38822,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "686:7:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 38821,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "686:7:23",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 38824,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "686:13:23",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "id": 38825,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "700:7:23",
                                        "memberName": "balance",
                                        "nodeType": "MemberAccess",
                                        "src": "686:21:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "665:42:23"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 38827,
                                                "name": "safe",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 38790,
                                                "src": "717:4:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Safe_$38785",
                                                    "typeString": "contract Safe"
                                                }
                                            },
                                            "id": 38829,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "722:8:23",
                                            "memberName": "withdraw",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 38784,
                                            "src": "717:13:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                                "typeString": "function () external"
                                            }
                                        },
                                        "id": 38830,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "717:15:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 38831,
                                    "nodeType": "ExpressionStatement",
                                    "src": "717:15:23"
                                },
                                {
                                    "assignments": [
                                        38833
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 38833,
                                            "mutability": "mutable",
                                            "name": "postBalance",
                                            "nameLocation": "750:11:23",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 38847,
                                            "src": "742:19:23",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 38832,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "742:7:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 38839,
                                    "initialValue": {
                                        "expression": {
                                            "arguments": [
                                                {
                                                    "id": 38836,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967268,
                                                    "src": "772:4:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_SafeTest_$38849",
                                                        "typeString": "contract SafeTest"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_SafeTest_$38849",
                                                        "typeString": "contract SafeTest"
                                                    }
                                                ],
                                                "id": 38835,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "764:7:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 38834,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "764:7:23",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 38837,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "764:13:23",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "id": 38838,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "778:7:23",
                                        "memberName": "balance",
                                        "nodeType": "MemberAccess",
                                        "src": "764:21:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "742:43:23"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 38843,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 38841,
                                                    "name": "preBalance",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 38820,
                                                    "src": "804:10:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "+",
                                                "rightExpression": {
                                                    "hexValue": "31",
                                                    "id": 38842,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "817:7:23",
                                                    "subdenomination": "ether",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                        "typeString": "int_const 1000000000000000000"
                                                    },
                                                    "value": "1"
                                                },
                                                "src": "804:20:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 38844,
                                                "name": "postBalance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 38833,
                                                "src": "826:11:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 38840,
                                            "name": "assertEq",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                344,
                                                362,
                                                377,
                                                395,
                                                449,
                                                467,
                                                521,
                                                539,
                                                554,
                                                572,
                                                616,
                                                634,
                                                649,
                                                667,
                                                684,
                                                704,
                                                721,
                                                741,
                                                758,
                                                778,
                                                795,
                                                815,
                                                832,
                                                852,
                                                869,
                                                889,
                                                906,
                                                926
                                            ],
                                            "referencedDeclaration": 377,
                                            "src": "795:8:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256,uint256) pure"
                                            }
                                        },
                                        "id": 38845,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "795:43:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 38846,
                                    "nodeType": "ExpressionStatement",
                                    "src": "795:43:23"
                                }
                            ]
                        },
                        "functionSelector": "31871ff0",
                        "id": 38848,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "test_Withdraw",
                        "nameLocation": "582:13:23",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 38806,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "595:2:23"
                        },
                        "returnParameters": {
                            "id": 38807,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "605:0:23"
                        },
                        "scope": 38849,
                        "src": "573:272:23",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 38850,
                "src": "342:505:23",
                "usedErrors": [],
                "usedEvents": [
                    100,
                    104,
                    108,
                    112,
                    116,
                    120,
                    124,
                    128,
                    134,
                    140,
                    148,
                    156,
                    162,
                    168,
                    174,
                    180,
                    185,
                    190,
                    195,
                    202,
                    209,
                    216
                ]
            }
        ],
        "src": "33:815:23"
    },
    "functionHashes": {
        "IS_TEST()": "fa7626d4",
        "excludeArtifacts()": "b5508aa9",
        "excludeContracts()": "e20c9f71",
        "excludeSelectors()": "b0464fdc",
        "excludeSenders()": "1ed7831c",
        "failed()": "ba414fa6",
        "setUp()": "0a9254e4",
        "targetArtifactSelectors()": "66d9a9a0",
        "targetArtifacts()": "85226c81",
        "targetContracts()": "3f7286f4",
        "targetInterfaces()": "2ade3880",
        "targetSelectors()": "916a17c6",
        "targetSenders()": "3e5e3c23",
        "test_Withdraw()": "31871ff0"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "827200",
            "executionCost": "49325",
            "totalCost": "876525"
        },
        "external": {
            "IS_TEST()": "2397",
            "excludeArtifacts()": "infinite",
            "excludeContracts()": "infinite",
            "excludeSelectors()": "infinite",
            "excludeSenders()": "infinite",
            "failed()": "infinite",
            "setUp()": "infinite",
            "targetArtifactSelectors()": "infinite",
            "targetArtifacts()": "infinite",
            "targetContracts()": "infinite",
            "targetInterfaces()": "infinite",
            "targetSelectors()": "infinite",
            "targetSenders()": "infinite",
            "test_Withdraw()": "infinite"
        }
    }
}